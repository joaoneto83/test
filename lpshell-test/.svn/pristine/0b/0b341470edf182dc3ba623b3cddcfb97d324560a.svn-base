{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./button-styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ButtonRadio(props) {\n  var _useState = useState(props.routes),\n    _useState2 = _slicedToArray(_useState, 2),\n    onoff = _useState2[0],\n    getOnOff = _useState2[1];\n  useEffect(function () {\n    console.log(\"radio\", props, onoff);\n  }, [onoff]);\n  return _jsx(View, {\n    children: onoff ? _jsxs(TouchableOpacity, {\n      style: styles.containerOnOff,\n      onPress: function onPress() {\n        return getOnOff(!onoff);\n      },\n      children: [_jsx(Text, {\n        style: styles.textTrue,\n        children: \" SI \"\n      }), _jsx(Text, {\n        style: styles.textFalse,\n        children: \"NO \"\n      })]\n    }) : _jsxs(TouchableOpacity, {\n      style: styles.containerOnOff,\n      onPress: function onPress() {\n        return getOnOff(!onoff);\n      },\n      children: [_jsx(Text, {\n        style: styles.textFalse,\n        children: \" SI \"\n      }), _jsx(Text, {\n        style: styles.textTrue,\n        children: \" NO\"\n      })]\n    })\n  });\n}\n;\nexport default ButtonRadio;","map":{"version":3,"names":["React","useState","useEffect","Text","TouchableOpacity","View","styles","jsx","_jsx","jsxs","_jsxs","ButtonRadio","props","_useState","routes","_useState2","_slicedToArray","onoff","getOnOff","console","log","children","style","containerOnOff","onPress","textTrue","textFalse"],"sources":["C:/project/lpshell_mobile/trunck/lpshell-test/assets/utils/buttonBasi/ButtonRadio.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Text,TouchableOpacity,View } from \"react-native\";\r\n\r\nimport styles from \"./button-styles\";\r\n\r\n\r\nfunction ButtonRadio(props) {\r\n    const [onoff, getOnOff] = useState(props.routes);\r\n\r\n   useEffect(() => {\r\n    console.log(\"radio\",props,onoff )\r\n    \r\n   }, [onoff]\r\n   )\r\n \r\n \r\n      return (\r\n        <View>\r\n        {onoff ?  <TouchableOpacity   style={styles.containerOnOff}   onPress = {()=>  getOnOff(!onoff)}  >\r\n           <Text style={styles.textTrue}> SI </Text>  \r\n           <Text style={styles.textFalse}>NO </Text>     \r\n       </TouchableOpacity> :\r\n       <TouchableOpacity   style={styles.containerOnOff}   onPress = {()=>  getOnOff(!onoff)}  >\r\n       <Text style={styles.textFalse}> SI </Text>  \r\n       <Text style={styles.textTrue}> NO</Text>\r\n           </TouchableOpacity>\r\n        }\r\n        </View>   \r\n      );\r\n  };\r\n\r\n  export default ButtonRadio;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAGnD,OAAOC,MAAM;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGrC,SAASC,WAAWA,CAACC,KAAK,EAAE;EACxB,IAAAC,SAAA,GAA0BZ,QAAQ,CAACW,KAAK,CAACE,MAAM,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAzCI,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEvBb,SAAS,CAAC,YAAM;IACfiB,OAAO,CAACC,GAAG,CAAC,OAAO,EAACR,KAAK,EAACK,KAAK,CAAE;EAElC,CAAC,EAAE,CAACA,KAAK,CAAC,CACT;EAGE,OACET,IAAA,CAACH,IAAI;IAAAgB,QAAA,EACJJ,KAAK,GAAIP,KAAA,CAACN,gBAAgB;MAAGkB,KAAK,EAAEhB,MAAM,CAACiB,cAAe;MAAGC,OAAO,EAAI,SAAAA,QAAA;QAAA,OAAMN,QAAQ,CAAC,CAACD,KAAK,CAAC;MAAA,CAAC;MAAAI,QAAA,GAC7Fb,IAAA,CAACL,IAAI;QAACmB,KAAK,EAAEhB,MAAM,CAACmB,QAAS;QAAAJ,QAAA,EAAC;MAAI,EAAO,EACzCb,IAAA,CAACL,IAAI;QAACmB,KAAK,EAAEhB,MAAM,CAACoB,SAAU;QAAAL,QAAA,EAAC;MAAG,EAAO;IAAA,EAC1B,GACnBX,KAAA,CAACN,gBAAgB;MAAGkB,KAAK,EAAEhB,MAAM,CAACiB,cAAe;MAAGC,OAAO,EAAI,SAAAA,QAAA;QAAA,OAAMN,QAAQ,CAAC,CAACD,KAAK,CAAC;MAAA,CAAC;MAAAI,QAAA,GACtFb,IAAA,CAACL,IAAI;QAACmB,KAAK,EAAEhB,MAAM,CAACoB,SAAU;QAAAL,QAAA,EAAC;MAAI,EAAO,EAC1Cb,IAAA,CAACL,IAAI;QAACmB,KAAK,EAAEhB,MAAM,CAACmB,QAAS;QAAAJ,QAAA,EAAC;MAAG,EAAO;IAAA;EACjB,EAEf;AAEb;AAAC;AAED,eAAeV,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}